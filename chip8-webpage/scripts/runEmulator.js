let computer_grenade_graphic = [
    0x60, 0x10, 0x61, 0x04, 0xA2, 0xA2, 0xD0, 0x1B, 0x70, 0x08, 0xA2, 0xB8, 0xD0, 0x13, 0x70, 0x08, 0xD0, 0x13,
    0x70, 0x08, 0xA2, 0xAD, 0xD0, 0x1B, 0x60, 0x10, 0x71, 0x0B, 0xA2, 0xBB, 0xD0, 0x1F, 0x70, 0x08, 0x71, 0x07,
    0xA2, 0xD9, 0xD0, 0x18, 0x70, 0x08, 0xD0, 0x18, 0x70, 0x08, 0x71, 0xF9, 0xA2, 0xCA, 0xD0, 0x1F, 0x6A, 0x18,
    0x6B, 0x20, 0x6C, 0x07, 0x69, 0x00, 0x68, 0x0F, 0x22, 0x54, 0x22, 0x54, 0x79, 0x01, 0x89, 0x82, 0x22, 0x54,
    0x6F, 0x04, 0xFF, 0x15, 0xFF, 0x07, 0x3F, 0x00, 0x12, 0x4C, 0x12, 0x40, 0xA2, 0x62, 0xF9, 0x1E, 0xDA, 0xCF,
    0xA2, 0x82, 0xF9, 0x1E, 0xDB, 0xCF, 0x00, 0xEE, 0x0F, 0x30, 0x7C, 0x7C, 0xF8, 0xF4, 0xE0, 0xE8, 0xF0, 0xE8,
    0xE0, 0x68, 0x70, 0x34, 0x08, 0x00, 0x0F, 0x30, 0x7C, 0x7C, 0xF8, 0xF4, 0xE0, 0xE8, 0xF0, 0xE8, 0xE0, 0x68,
    0x70, 0x34, 0x08, 0x00, 0xF0, 0x0C, 0x46, 0x66, 0x33, 0x13, 0x0B, 0x0B, 0x1F, 0x0F, 0x0F, 0x1E, 0x1E, 0x1C,
    0x30, 0x00, 0xF0, 0x0C, 0x46, 0x66, 0x33, 0x13, 0x0B, 0x0B, 0x1F, 0x0F, 0x0F, 0x1E, 0x1E, 0x1C, 0x30, 0x00,
    0x3F, 0x3F, 0x3F, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0xFC, 0xFC, 0xFC, 0x3C, 0x3C, 0x3C, 0x3C,
    0x3C, 0x3C, 0x3C, 0x3C, 0xFF, 0xFF, 0xFF, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3F, 0x3F, 0x3F, 0x00,
    0x07, 0x1C, 0x73, 0x7F, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0xFC, 0xFC, 0xFC, 0x00, 0xE0, 0xD8, 0x26,
    0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x33, 0xCC, 0x33, 0xFF];

let space_wars = [
    0x16, 0x48, 0x77, 0x84, 0x84, 0x67, 0x14, 0x14, 0xE4, 0x18, 0xA4, 0xA5, 0x3D, 0x25, 0x24, 0x24, 0x6F, 0x88, 0x08, 0x0E, 0x08,
    0x88, 0x6F, 0x89, 0x8A, 0x8A, 0xAB, 0xAA, 0xAA, 0x52, 0x8C, 0x52, 0x52, 0xDC, 0x54, 0x52, 0x52, 0xF0, 0x80, 0x40, 0x40, 0x20,
    0x10, 0xF0, 0x30, 0x30, 0x3C, 0x3C, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3C, 0x3C, 0x3C, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0xFC, 0xFF, 0x60, 0x40, 0x0E, 0x02, 0x3F, 0xFF,
    0x02, 0x0E, 0x00, 0x18, 0x1E, 0x0E, 0x00, 0xC0, 0xC6, 0x0F, 0x0F, 0x06, 0x02, 0x00, 0x70, 0xF0, 0x60, 0x80, 0xAA, 0xA0, 0x40,
    0xA0, 0x88, 0x50, 0x20, 0x50, 0x88, 0x82, 0x54, 0x38, 0x7C, 0x38, 0x54, 0x82, 0x3C, 0x3C, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
    0xC3, 0x3C, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF, 0xC0,
    0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3C,
    0x38, 0x89, 0x8A, 0x8A, 0x72, 0x22, 0x22, 0x22, 0x22, 0x21, 0xC8, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0xC7, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x8B, 0x88, 0x88, 0x88, 0xA8, 0xA8, 0xA8, 0xA8, 0x53, 0xE8, 0x8C, 0x8A, 0x8A, 0x8A,
    0x8A, 0x8A, 0x89, 0xE8, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,
    0xF9, 0xC7, 0x28, 0x28, 0x28, 0x27, 0x20, 0x20, 0x20, 0xCF, 0xBE, 0x20, 0x20, 0x20, 0x3C, 0xA0, 0xA0, 0xA0, 0x3E, 0xF7, 0x94,
    0x94, 0xF5, 0x94, 0x97, 0xBD, 0x24, 0x3C, 0xA4, 0xA4, 0xA5, 0xE9, 0x8D, 0x8D, 0x8B, 0x8B, 0xE9, 0x70, 0x50, 0x10, 0x27, 0x00,
    0x20, 0xC2, 0x22, 0x10, 0xF0, 0x20, 0xC0, 0xF4, 0x84, 0x80, 0xF0, 0x80, 0xF0, 0x81, 0xE0, 0x82, 0xD0, 0x60, 0x05, 0xE0, 0xA1,
    0x72, 0xFF, 0x60, 0x07, 0xE0, 0xA1, 0x71, 0xFF, 0x60, 0x08, 0xE0, 0xA1, 0x72, 0x01, 0x60, 0x09, 0xE0, 0xA1, 0x71, 0x01, 0x41,
    0x00, 0x61, 0x01, 0x41, 0x24, 0x61, 0x23, 0x42, 0x00, 0x62, 0x01, 0x42, 0x15, 0x62, 0x14, 0xA2, 0x4A, 0xDE, 0xD6, 0x8E, 0x10,
    0x8D, 0x20, 0xDE, 0xD6, 0x00, 0xEE, 0x81, 0x90, 0x82, 0x80, 0x23, 0x7A, 0x60, 0x00, 0x41, 0x38, 0x61, 0x37, 0x41, 0x23, 0x61,
    0x24, 0x42, 0x00, 0x62, 0x01, 0x42, 0x15, 0x62, 0x14, 0xA2, 0x50, 0xD9, 0x86, 0x89, 0x10, 0x88, 0x20, 0xD9, 0x86, 0x00, 0xEE,
    0xC0, 0x1C, 0xB3, 0x80, 0x00, 0xEE, 0x71, 0x01, 0x00, 0xEE, 0x71, 0xFF, 0x00, 0xEE, 0x00, 0xEE, 0x00, 0xEE, 0x23, 0x9E, 0x00,
    0xEE, 0x23, 0x9E, 0x00, 0xEE, 0x00, 0xEE, 0x00, 0xEE, 0x00, 0xEE, 0x00, 0xEE, 0x00, 0xEE, 0x80, 0x80, 0x80, 0xD7, 0x4F, 0x01,
    0x13, 0xAA, 0x72, 0xFF, 0x13, 0xAC, 0x72, 0x01, 0x00, 0xEE, 0x60, 0x06, 0xE0, 0x9E, 0x00, 0xEE, 0x8C, 0xE0, 0x7C, 0x09, 0x8B,
    0xD0, 0x7B, 0x03, 0xA2, 0x65, 0xDC, 0xB1, 0x6A, 0x01, 0x00, 0xEE, 0xA2, 0x65, 0xDC, 0xB1, 0x7C, 0x01, 0x3C, 0x3F, 0x13, 0xD4,
    0x6A, 0x00, 0x6F, 0x00, 0x00, 0xEE, 0xDC, 0xB1, 0x4F, 0x00, 0x00, 0xEE, 0x6A, 0x00, 0x6F, 0x00, 0x00, 0xEE, 0x87, 0x90, 0x60,
    0x02, 0x87, 0x05, 0x86, 0x80, 0x76, 0x03, 0xA2, 0x65, 0xD7, 0x61, 0x65, 0x01, 0x00, 0xEE, 0xA2, 0x65, 0xD7, 0x61, 0x60, 0x01,
    0x87, 0x05, 0x37, 0x01, 0x14, 0x04, 0x65, 0x00, 0x6F, 0x00, 0x00, 0xEE, 0xD7, 0x61, 0x4F, 0x00, 0x00, 0xEE, 0x65, 0x00, 0x6F,
    0x00, 0x00, 0xEE, 0x00, 0xE0, 0xA2, 0x02, 0x60, 0x02, 0x61, 0x02, 0xD0, 0x17, 0xA2, 0x09, 0x60, 0x0A, 0x61, 0x02, 0xD0, 0x17,
    0xA2, 0x10, 0x60, 0x12, 0x61, 0x02, 0xD0, 0x17, 0xA2, 0x17, 0x60, 0x1B, 0x61, 0x06, 0xD0, 0x17, 0xA2, 0x1E, 0x60, 0x23, 0x61,
    0x06, 0xD0, 0x17, 0xA2, 0x25, 0x60, 0x2B, 0x61, 0x06, 0xD0, 0x17, 0xA2, 0x2C, 0x6E, 0x01, 0x6D, 0x10, 0xDE, 0xDF, 0xA2, 0x3B,
    0x6E, 0x09, 0x6D, 0x10, 0xDE, 0xDF, 0x6E, 0x01, 0x6D, 0x10, 0x00, 0xEE, 0xA2, 0x2C, 0xDE, 0xDF, 0x7E, 0x08, 0xA2, 0x3B, 0xDE,
    0xDF, 0x60, 0x07, 0x8E, 0x05, 0xA2, 0x2C, 0xDE, 0xDF, 0x7E, 0x08, 0xA2, 0x3B, 0xDE, 0xDF, 0x60, 0x08, 0x8E, 0x05, 0x60, 0x14,
    0x24, 0x7A, 0x00, 0xEE, 0xF0, 0x15, 0xFF, 0x07, 0x3F, 0x00, 0x14, 0x7C, 0x00, 0xEE, 0x6A, 0x00, 0x65, 0x00, 0x00, 0xE0, 0x24,
    0xE4, 0xA2, 0x56, 0x60, 0x1C, 0x61, 0x0B, 0xD0, 0x1F, 0x60, 0x18, 0x61, 0x01, 0xD0, 0x1F, 0x60, 0x00, 0x61, 0x3A, 0xA2, 0x66,
    0xD0, 0x11, 0x70, 0x08, 0x30, 0x40, 0x14, 0x9E, 0x60, 0x00, 0x61, 0x00, 0xA2, 0x66, 0xD0, 0x11, 0x70, 0x08, 0x30, 0x40, 0x14,
    0xAC, 0xA2, 0xA8, 0x60, 0x1C, 0x61, 0x3D, 0xD0, 0x11, 0x24, 0xD2, 0x6E, 0x05, 0x6D, 0x0A, 0x69, 0x33, 0x68, 0x0A, 0xA2, 0x4A,
    0xDE, 0xD6, 0xA2, 0x50, 0xD9, 0x86, 0x00, 0xEE, 0x60, 0x18, 0x61, 0x1B, 0xF3, 0x29, 0xD0, 0x15, 0x60, 0x23, 0x61, 0x1B, 0xF4,
    0x29, 0xD0, 0x15, 0x00, 0xEE, 0x43, 0x00, 0xA2, 0x76, 0x43, 0x01, 0xA2, 0x81, 0x43, 0x02, 0xA2, 0x8C, 0x43, 0x03, 0xA2, 0x97,
    0x60, 0x11, 0x61, 0x0A, 0xD0, 0x1B, 0xA2, 0xA2, 0x60, 0x1B, 0xD0, 0x16, 0x44, 0x00, 0xA2, 0x76, 0x44, 0x01, 0xA2, 0x81, 0x44,
    0x02, 0xA2, 0x8C, 0x44, 0x03, 0xA2, 0x97, 0x60, 0x25, 0x61, 0x0A, 0xD0, 0x1B, 0x60, 0x64, 0x24, 0x7A, 0x25, 0x84, 0x00, 0xE0,
    0x00, 0xEE, 0x74, 0x01, 0x81, 0xE0, 0x82, 0xD0, 0xA2, 0x4A, 0xDE, 0xD6, 0x71, 0x01, 0x72, 0x02, 0x60, 0x0A, 0xA2, 0x67, 0xD1,
    0x23, 0x24, 0x7A, 0xD1, 0x23, 0x71, 0xFF, 0x72, 0xFF, 0xA2, 0x6A, 0xD1, 0x25, 0x24, 0x7A, 0xD1, 0x25, 0x71, 0xFF, 0x72, 0xFF,
    0xA2, 0x6F, 0xD1, 0x27, 0x24, 0x7A, 0xD1, 0x27, 0x00, 0xEE, 0x73, 0x01, 0x81, 0x90, 0x82, 0x80, 0xA2, 0x50, 0xD9, 0x86, 0x71,
    0x01, 0x72, 0x02, 0x60, 0x0A, 0xA2, 0x67, 0xD1, 0x23, 0x24, 0x7A, 0xD1, 0x23, 0x71, 0xFF, 0x72, 0xFF, 0xA2, 0x6A, 0xD1, 0x25,
    0x24, 0x7A, 0xD1, 0x25, 0x71, 0xFF, 0x72, 0xFF, 0xA2, 0x6F, 0xD1, 0x27, 0x24, 0x7A, 0xD1, 0x27, 0x00, 0xEE, 0x43, 0x03, 0x25,
    0x8E, 0x44, 0x03, 0x25, 0xE8, 0x00, 0xEE, 0x60, 0x09, 0x61, 0x38, 0xA2, 0xFA, 0xD0, 0x16, 0xA3, 0x00, 0x70, 0x08, 0xD0, 0x16,
    0xA3, 0x06, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x0C, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x12, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x18, 0x70,
    0x08, 0xD0, 0x16, 0x60, 0x01, 0x61, 0x00, 0xA2, 0xA9, 0xD0, 0x19, 0xA2, 0xB2, 0x70, 0x08, 0xD0, 0x19, 0xA2, 0xBB, 0x70, 0x08,
    0xD0, 0x19, 0xA2, 0xC4, 0x70, 0x1D, 0xD0, 0x19, 0xA2, 0xCD, 0x70, 0x08, 0xD0, 0x19, 0xA2, 0xD6, 0x70, 0x08, 0xD0, 0x19, 0x60,
    0x07, 0x24, 0x7A, 0x62, 0x06, 0xE2, 0x9E, 0x15, 0xB4, 0x26, 0x42, 0x00, 0xEE, 0x60, 0x09, 0x61, 0x38, 0xA2, 0xFA, 0xD0, 0x16,
    0xA3, 0x00, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x06, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x0C, 0x70, 0x08, 0xD0, 0x16, 0xA3, 0x12, 0x70,
    0x08, 0xD0, 0x16, 0xA3, 0x18, 0x70, 0x08, 0xD0, 0x16, 0x60, 0x01, 0x61, 0x00, 0xA2, 0xA9, 0xD0, 0x19, 0xA2, 0xB2, 0x70, 0x08,
    0xD0, 0x19, 0xA2, 0xBB, 0x70, 0x08, 0xD0, 0x19, 0xA2, 0xDF, 0x70, 0x17, 0xD0, 0x19, 0xA2, 0xE8, 0x70, 0x08, 0xD0, 0x19, 0xA2,
    0xF1, 0x70, 0x08, 0xD0, 0x19, 0x60, 0x07, 0x24, 0x7A, 0x62, 0x06, 0xE2, 0x9E, 0x16, 0x0E, 0x26, 0x42, 0x00, 0xEE, 0x63, 0x00,
    0x64, 0x00, 0x00, 0xE0, 0x24, 0x10, 0x24, 0x58, 0x60, 0x06, 0xE0, 0x9E, 0x16, 0x4A, 0x24, 0x84, 0x23, 0x1E, 0x4F, 0x00, 0x16,
    0x5E, 0x25, 0x20, 0x24, 0x84, 0x23, 0x56, 0x4F, 0x00, 0x16, 0x68, 0x25, 0x52, 0x24, 0x84, 0x3A, 0x00, 0x23, 0xC4, 0x4A, 0x00,
    0x23, 0xAE, 0x35, 0x00, 0x23, 0xF2, 0x45, 0x00, 0x23, 0xE0, 0x16, 0x54, 0x00, 0xEE
];

let smiley_faces = [
    0x12, 0x08, 0x24, 0x24, 0x00, 0x81, 0x42, 0x3C, 0xA2, 0x02, 0x62, 0x00, 0xC0, 0x3F, 
    0xC1, 0x1F, 0xD0, 0x16, 0x72, 0x01, 0x32, 0x20, 0x12, 0x0C, 0x00, 0xE0, 0x12, 0x0A
];

let puzzle15 = [
    0x00, 0xE0, 0x6C, 0x00, 0x4C, 0x00, 0x6E, 0x0F, 0xA2, 0x03, 0x60, 0x20, 0xF0, 0x55, 0x00, 0xE0, 0x22, 0xBE, 0x22, 0x76, 0x22, 
    0x8E, 0x22, 0x5E, 0x22, 0x46, 0x12, 0x10, 0x61, 0x00, 0x62, 0x17, 0x63, 0x04, 0x41, 0x10, 0x00, 0xEE, 0xA2, 0xE8, 0xF1, 0x1E, 
    0xF0, 0x65, 0x40, 0x00, 0x12, 0x34, 0xF0, 0x29, 0xD2, 0x35, 0x71, 0x01, 0x72, 0x05, 0x64, 0x03, 0x84, 0x12, 0x34, 0x00, 0x12, 
    0x22, 0x62, 0x17, 0x73, 0x06, 0x12, 0x22, 0x64, 0x03, 0x84, 0xE2, 0x65, 0x03, 0x85, 0xD2, 0x94, 0x50, 0x00, 0xEE, 0x44, 0x03, 
    0x00, 0xEE, 0x64, 0x01, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x46, 0x64, 0x03, 0x84, 0xE2, 0x65, 0x03, 0x85, 0xD2, 0x94, 0x50, 0x00, 
    0xEE, 0x44, 0x00, 0x00, 0xEE, 0x64, 0xFF, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x5E, 0x64, 0x0C, 0x84, 0xE2, 0x65, 0x0C, 0x85, 0xD2, 
    0x94, 0x50, 0x00, 0xEE, 0x44, 0x00, 0x00, 0xEE, 0x64, 0xFC, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x76, 0x64, 0x0C, 0x84, 0xE2, 0x65, 
    0x0C, 0x85, 0xD2, 0x94, 0x50, 0x00, 0xEE, 0x44, 0x0C, 0x00, 0xEE, 0x64, 0x04, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x8E, 0xA2, 0xE8, 
    0xF4, 0x1E, 0xF0, 0x65, 0xA2, 0xE8, 0xFE, 0x1E, 0xF0, 0x55, 0x60, 0x00, 0xA2, 0xE8, 0xF4, 0x1E, 0xF0, 0x55, 0x8E, 0x40, 0x00, 
    0xEE, 0x3C, 0x00, 0x12, 0xD2, 0x22, 0x1C, 0x22, 0xD8, 0x22, 0x1C, 0xA2, 0xF8, 0xFD, 0x1E, 0xF0, 0x65, 0x8D, 0x00, 0x00, 0xEE, 
    0x7C, 0xFF, 0xCD, 0x0F, 0x00, 0xEE, 0x7D, 0x01, 0x60, 0x0F, 0x8D, 0x02, 0xED, 0x9E, 0x12, 0xD8, 0xED, 0xA1, 0x12, 0xE2, 0x00, 
    0xEE, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x00, 0x0D, 0x00, 0x01, 0x02, 
    0x04, 0x05, 0x06, 0x08, 0x09, 0x0A, 0x0C, 0x0E, 0x03, 0x07, 0x0B, 0x0F, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x76, 0x64, 0x0C, 0x84, 
    0xE2, 0x65, 0x0C, 0x85, 0xD2, 0x94, 0x50, 0x00, 0xEE, 0x44, 0x0C, 0x00, 0xEE, 0x64, 0x04, 0x84, 0xE4, 0x22, 0xA6, 0x12, 0x8E, 
    0xA2, 0xE8, 0xF4, 0x1E, 0xF0, 0x65, 0xA2, 0xE8, 0xFE, 0x1E, 0xF0, 0x55, 0x60, 0x00, 0xA2, 0xE8, 0xF4, 0x1E, 0xF0, 0x55, 0x8E, 
    0x40, 0x00, 0xEE, 0x3C, 0x00, 0x12, 0xD2, 0x22, 0x1C, 0x22, 0xD8, 0x22, 0x1C, 0xA2, 0xF8, 0xFD, 0x1E, 0xF0, 0x65, 0x8D, 0x00, 
    0x00, 0xEE, 0x7C, 0xFF, 0xCD, 0x0F, 0x00, 0xEE, 0x7D, 0x01, 0x60, 0x0F, 0x8D, 0x02, 0xED, 0x9E, 0x12, 0xD8, 0xED, 0xA1, 0x12, 
    0xE2, 0x00, 0xEE, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x00, 0x0D, 0x00, 
    0x01, 0x02, 0x04, 0x05, 0x06, 0x08, 
];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

runProcess = null;
let CHIP8 = new CPU();

/////////////////////////////////////////////////////////////////////
let keyMap = {
    '1': 0x1, '2': 0x2, '3': 0x3, '4': 0x4,
    'q': 0x4, 'w': 0x5, 'e': 0x6, 'r': 0xD,
    'a': 0x7, 's': 0x8, 'd': 0x9, 'f': 0xE,
    'z': 0xA, 'x': 0x0, 'c': 0xB, 'v': 0xF,
};

document.addEventListener("keydown", function(event) {
    CHIP8.setKeyDown(keyMap[event.key]);
});

document.addEventListener("keyup", function(event) {
    CHIP8.setKeyUp(keyMap[event.key]);
});
/////////////////////////////////////////////////////////////////////

function runEmulator(menu) {
    CHIP8.reset();
    if (runProcess != null)                 // Clear previous program process (required when changing ROMs)
        clearInterval(runProcess);
    let beepSound = new Audio ("beep.wav"); // Buffer beep sound

    if (menu.value == "NOTHING") {
        emulateOpcode(0x00E0);              // Clear the screen
    }

    else if (menu.value == "CGG") {
        let len = computer_grenade_graphic.length;
        for (let i = 0; i < len; i++) {
            CHIP8.memory[CHIP8.PC + i] = computer_grenade_graphic[i];
        }
    }

    else if (menu.value == "SWARS") {
        let len = space_wars.length;
        for (let i = 0; i < len; i++) {
            CHIP8.memory[CHIP8.PC + i] = space_wars[i];
        }
    }
    
    else if (menu.value == "SFACES") {
        let len = smiley_faces.length;
        for (let i = 0; i < len; i++) {
            CHIP8.memory[CHIP8.PC + i] = smiley_faces[i];
        }
    }

    else if (menu.value == "15PUZZLE") {
        let len = puzzle15.length;
        for (let i = 0; i < len; i++) {
            CHIP8.memory[CHIP8.PC + i] = puzzle15[i];
        }
    }

    runProcess = setInterval (function() {

        let opcode = CHIP8.memory[CHIP8.PC] << 8 | CHIP8.memory[CHIP8.PC + 1];
        CHIP8.emulateOpcode(opcode);
        CHIP8.renderScreen();

        if (CHIP8.soundTimer > 0)
            beepSound.play();
        CHIP8.setTimer();
        
    }, 1);
}

// Load ROM into memory
window.onload = function() {
    var fileInput = document.getElementById('rom');

    fileInput.addEventListener('change', function(e) {
        
        // load new ROM if user select a file 
        if(fileInput.files.length === 1) { 

            var file = fileInput.files[0];

            CHIP8.reset();
            CHIP8.loadProgram(file);
        
        }
        
    });
}
